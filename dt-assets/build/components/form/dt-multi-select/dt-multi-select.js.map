{"version":3,"file":"dt-multi-select.js","sources":["../../../src/components/form/dt-multi-select/dt-multi-select.js"],"sourcesContent":["import { html, css } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { msg } from '@lit/localize';\nimport DtFormBase from '../dt-form-base.js';\nimport '../../icons/dt-spinner.js';\nimport '../../icons/dt-checkmark.js';\n\nexport class DtMultiSelect extends DtFormBase {\n  static get styles() {\n    return [\n      ...super.styles,\n      css`\n        :host {\n          position: relative;\n          font-family: Helvetica, Arial, sans-serif;\n        }\n\n        .input-group {\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          margin-bottom: 1rem;\n        }\n        .input-group.disabled input,\n        .input-group.disabled .field-container {\n          background-color: var(--disabled-color);\n        }\n        .input-group.disabled a,\n        .input-group.disabled button {\n          cursor: not-allowed;\n          pointer-events: none;\n        }\n        .input-group.disabled *:hover {\n          cursor: not-allowed;\n        }\n\n        .field-container {\n          background-color: var(--dt-multi-select-background-color, #fefefe);\n          border: 1px solid var(--dt-form-border-color, #cacaca);\n          border-radius: 0;\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          font-size: 1rem;\n          font-weight: 300;\n          min-height: 2.5rem;\n          line-height: 1.5;\n          margin: 0;\n          padding-top: calc(0.5rem - 0.375rem);\n          padding-bottom: 0.5rem;\n          padding-inline: 0.5rem 1.6rem;\n          box-sizing: border-box;\n          width: 100%;\n          text-transform: none;\n          display: flex;\n          flex-wrap: wrap;\n        }\n\n        .field-container input,\n        .field-container .selected-option {\n          height: 1.25rem;\n        }\n\n        .selected-option {\n          border: 1px solid var(--dt-multi-select-tag-border-color, #c2e0ff);\n          background-color: var(\n            --dt-multi-select-tag-background-color,\n            #c2e0ff\n          );\n\n          display: flex;\n          font-size: 0.875rem;\n          position: relative;\n          border-radius: 2px;\n          margin-inline-end: 4px;\n          margin-block-start: 0.375rem;\n          box-sizing: border-box;\n        }\n        .selected-option > *:first-child {\n          padding-inline-start: 4px;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          white-space: nowrap;\n          --container-padding: calc(0.5rem + 1.6rem + 2px);\n          --option-padding: 8px;\n          --option-button: 20px;\n          max-width: calc(\n            var(--container-width) - var(--container-padding) -\n              var(--option-padding) - var(--option-button)\n          );\n        }\n        .selected-option * {\n          align-self: center;\n        }\n        .selected-option button {\n          background: transparent;\n          outline: 0;\n          border: 0;\n          border-inline-start: 1px solid\n            var(--dt-multi-select-tag-border-color, #c2e0ff);\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          margin-inline-start: 4px;\n        }\n        .selected-option button:hover {\n          cursor: pointer;\n        }\n\n        .field-container input {\n          background-color: var(--dt-form-background-color, #fff);\n          color: var(--dt-form-text-color, #000);\n          flex-grow: 1;\n          min-width: 50px;\n          border: 0;\n          margin-block-start: 0.375rem;\n        }\n        .field-container input:focus,\n        .field-container input:focus-visible,\n        .field-container input:active {\n          border: 0;\n          outline: 0;\n        }\n        .field-container input::placeholder {\n          color: var(--dt-text-placeholder-color, #999);\n          opacity: 1;\n        }\n\n        /* === Options List === */\n        .option-list {\n          list-style: none;\n          margin: 0;\n          padding: 0;\n          border: 1px solid var(--dt-form-border-color, #cacaca);\n          background: var(--dt-form-background-color, #fefefe);\n          z-index: 10;\n          position: absolute;\n          width: 100%;\n          top: 0;\n          left: 0;\n          box-shadow: var(--shadow-1);\n          max-height: 150px;\n          overflow-y: scroll;\n        }\n        .option-list li {\n          border-block-start: 1px solid var(--dt-form-border-color, #cacaca);\n          outline: 0;\n        }\n        .option-list li div,\n        .option-list li button {\n          padding: 0.5rem 0.75rem;\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          font-weight: 100;\n          font-size: 1rem;\n          text-decoration: none;\n          text-align: inherit;\n        }\n        .option-list li button {\n          display: block;\n          width: 100%;\n          border: 0;\n          background: transparent;\n        }\n        .option-list li button:hover,\n        .option-list li button.active {\n          cursor: pointer;\n          background: var(--dt-multi-select-option-hover-background, #f5f5f5);\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      placeholder: { type: String },\n      options: { type: Array },\n      filteredOptions: { type: Array, state: true },\n      value: {\n        type: Array,\n        reflect: true,\n      },\n      open: {\n        type: Boolean,\n        state: true,\n      },\n      query: {\n        type: String,\n        state: true,\n      },\n      activeIndex: {\n        type: Number,\n        state: true,\n      },\n      containerHeight: {\n        type: Number,\n        state: true,\n      },\n      onchange: { type: String },\n    };\n  }\n\n  constructor() {\n    super();\n    this.activeIndex = -1;\n    this.filteredOptions = [];\n    this.detectTap = false;\n  }\n\n  updated() {\n    this._scrollOptionListToActive();\n\n    // set variable with width of container for truncating selected options via CSS\n    const container = this.shadowRoot.querySelector('.input-group');\n    const currentValue = container.style.getPropertyValue('--container-width');\n    if (!currentValue && container.clientWidth > 0) {\n      container.style.setProperty(\n        '--container-width',\n        `${container.clientWidth}px`\n      );\n    }\n  }\n\n  /**\n   * When navigating via keyboard, keep active element within visible area of option list\n   * @private\n   */\n  _scrollOptionListToActive() {\n    const optionList = this.shadowRoot.querySelector('.option-list');\n    const activeEl = this.shadowRoot.querySelector('button.active');\n    if (optionList && activeEl) {\n      const elTop = activeEl.offsetTop;\n      const elBottom = activeEl.offsetTop + activeEl.clientHeight;\n      const listTop = optionList.scrollTop;\n      const listBottom = optionList.scrollTop + optionList.clientHeight;\n      if (elBottom > listBottom) {\n        // active element below visible area. scroll down\n        optionList.scrollTo({\n          top: elBottom - optionList.clientHeight,\n          behavior: 'smooth',\n        });\n      } else if (elTop < listTop) {\n        // active element above visible area. scroll up\n        optionList.scrollTo({ top: elTop, behavior: 'smooth' });\n      }\n    }\n  }\n\n  _clickOption(e) {\n    if (e.target && e.target.value) {\n      this._select(e.target.value);\n    }\n  }\n\n  _touchStart(e) {\n    if (e.target) {\n      this.detectTap = false;\n    }\n  }\n\n  _touchMove(e) {\n    if (e.target) {\n      this.detectTap = true;\n    }\n  }\n\n  _touchEnd(e) {\n    if (!this.detectTap) {\n      if (e.target && e.target.value) {\n        this._clickOption(e);\n      }\n      this.detectTap = false;\n    }\n  }\n\n  _keyboardSelectOption() {\n    if (this.activeIndex > -1) {\n      this._select(this.filteredOptions[this.activeIndex].id);\n    }\n  }\n\n  _select(value) {\n    // Create custom event with new/old values to pass to onchange function\n    const event = new CustomEvent('change', {\n      detail: {\n        field: this.name,\n        oldValue: this.value,\n      },\n    });\n\n    // update value in this component\n    if (this.value && this.value.length) {\n      if (typeof this.value[0] === 'string') {\n        // If value is array of strings, check for same value prefixed with hyphen\n        this.value = [...this.value.filter(i => i !== `-${value}`), value];\n      } else {\n        // If value is array of objects, check for same value with `delete` property\n        let foundPrevious = false;\n        const newVal = this.value.map(i => {\n          const val = {\n            ...i,\n          };\n          console.log(i.id)\n          console.log(value);\n          if (i.id === value.id && i.delete) {\n            delete val.delete;\n            foundPrevious = true;\n          }\n          return val;\n        });\n        if (!foundPrevious) {\n          newVal.push(value);\n        }\n        this.value = newVal;\n      }\n    } else {\n      this.value = [value];\n    }\n    event.detail.newValue = this.value;\n    this.open = false; // close options list\n    this.activeIndex = -1; // reset keyboard-selected option\n\n    // dispatch event for use with addEventListener from javascript\n    this.dispatchEvent(event);\n    this._setFormValue(this.value);\n  }\n\n  _remove(e) {\n    if (e.target && e.target.dataset && e.target.dataset.value) {\n      const event = new CustomEvent('change', {\n        detail: {\n          field: this.name,\n          oldValue: this.value,\n        },\n      });\n      this.value = (this.value || []).map(i =>\n        i === e.target.dataset.value ? `-${i}` : i\n      );\n      event.detail.newValue = this.value;\n\n      // dispatch event for use with addEventListener from javascript\n      this.dispatchEvent(event);\n      this._setFormValue(this.value);\n\n      // If option was de-selected while list was open, re-focus input\n      if (this.open) {\n        this.shadowRoot.querySelector('input').focus();\n      }\n    }\n  }\n\n  static _focusInput(e) {\n    if (e.target !== e.currentTarget) return;\n\n    e.target.getElementsByTagName('input')[0].focus();\n  }\n\n  _inputFocusIn() {\n    this.open = true;\n    this.activeIndex = -1;\n  }\n\n  _inputFocusOut(e) {\n    // allow clicks on option list button to not close the option list\n    // Safari actually passes the parent <li> as the relatedTarget\n    if (\n      !e.relatedTarget ||\n      !['BUTTON', 'LI'].includes(e.relatedTarget.nodeName)\n    ) {\n      this.open = false;\n    }\n  }\n\n  _inputKeyDown(e) {\n    const keycode = e.keyCode || e.which;\n\n    switch (keycode) {\n      case 8: // backspace\n        if (e.target.value === '') {\n          this.value = this.value.slice(0, -1);\n        }\n        break;\n      case 38: // arrow up\n        this.open = true;\n        this._listHighlightPrevious();\n        break;\n      case 40: // arrow down\n        this.open = true;\n        this._listHighlightNext();\n        break;\n      case 9: // tab\n        if (this.activeIndex < 0) {\n          // if pressing tab while no option is selected,\n          // close the list so you can go to next field\n          this.open = false;\n        } else {\n          e.preventDefault();\n        }\n        this._keyboardSelectOption();\n        break;\n      case 13: // enter\n        this._keyboardSelectOption();\n        break;\n      case 27: // escape\n        this.open = false;\n        this.activeIndex = -1;\n        break;\n      default:\n        this.open = true;\n        break;\n    }\n  }\n\n  _inputKeyUp(e) {\n    this.query = e.target.value;\n  }\n\n  _listHighlightNext() {\n    this.activeIndex = Math.min(\n      this.filteredOptions.length - 1,\n      this.activeIndex + 1\n    );\n  }\n\n  _listHighlightPrevious() {\n    this.activeIndex = Math.max(0, this.activeIndex - 1);\n  }\n\n  /**\n   * Filter to options that:\n   *   1: are not selected\n   *   2: match the search query\n   * @private\n   */\n  _filterOptions() {\n    this.filteredOptions = (this.options || []).filter(\n      opt =>\n        !(this.value || []).includes(opt.id) &&\n        (!this.query ||\n          opt.label\n            .toLocaleLowerCase()\n            .includes(this.query.toLocaleLowerCase()))\n    );\n    return this.filteredOptions;\n  }\n\n  willUpdate(props) {\n    super.willUpdate(props);\n\n    if (props) {\n      const valueChanged = props.has('value');\n      const queryChanged = props.has('query');\n      const optionsChanged = props.has('options');\n\n      // if value, query, or options change, trigger filter\n      if (valueChanged || queryChanged || optionsChanged) {\n        this._filterOptions();\n      }\n\n      // Set the containerHeight for dropdown positioning if it hasn't been set yet\n      if (\n        !this.containerHeight &&\n        this.shadowRoot.children &&\n        this.shadowRoot.children.length\n      ) {\n        const inputGroup = this.shadowRoot.querySelector('.input-group');\n        if (inputGroup) {\n          this.containerHeight =\n            inputGroup.offsetHeight;\n        }\n      }\n    }\n  }\n\n  _renderSelectedOptions() {\n    return (\n      this.options &&\n      this.options\n        .filter(opt => this.value && this.value.indexOf(opt.id) > -1)\n        .map(\n          opt => html`\n            <div class=\"selected-option\">\n              <span>${opt.label}</span>\n              <button\n                @click=\"${this._remove}\"\n                ?disabled=\"${this.disabled}\"\n                data-value=\"${opt.id}\"\n              >\n                x\n              </button>\n            </div>\n          `\n        )\n    );\n  }\n\n  _renderOption(opt, idx) {\n    return html`\n      <li tabindex=\"-1\">\n        <button\n          value=\"${opt.id}\"\n          type=\"button\"\n          data-label=\"${opt.label}\"\n          @click=\"${this._clickOption}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          tabindex=\"-1\"\n          class=\"${this.activeIndex > -1 && this.activeIndex === idx\n            ? 'active'\n            : ''}\"\n        >\n          ${opt.label}\n        </button>\n      </li>\n    `;\n  }\n\n  _renderOptions() {\n    if (!this.filteredOptions.length) {\n      return html`<li><div>${msg('No Data Available')}</div></li>`;\n    }\n\n    return this.filteredOptions.map((opt, idx) => this._renderOption(opt, idx));\n  }\n\n  render() {\n    const optionListStyles = {\n      display: this.open ? 'block' : 'none',\n      top: this.containerHeight ? `${this.containerHeight}px` : '2.5rem',\n    };\n    return html`\n      ${this.labelTemplate()}\n\n      <div class=\"input-group ${this.disabled ? 'disabled' : ''}\">\n        <div\n          class=\"field-container\"\n          @click=\"${this._focusInput}\"\n          @keydown=\"${this._focusInput}\"\n        >\n          ${this._renderSelectedOptions()}\n          <input\n            type=\"text\"\n            placeholder=\"${this.placeholder}\"\n            @focusin=\"${this._inputFocusIn}\"\n            @blur=\"${this._inputFocusOut}\"\n            @keydown=\"${this._inputKeyDown}\"\n            @keyup=\"${this._inputKeyUp}\"\n            ?disabled=\"${this.disabled}\"\n          />\n        </div>\n        <ul class=\"option-list\" style=${styleMap(optionListStyles)}>\n          ${this._renderOptions()}\n        </ul>\n        ${this.loading\n          ? html`<dt-spinner class=\"icon-overlay\"></dt-spinner>`\n          : null}\n        ${this.saved\n          ? html`<dt-checkmark class=\"icon-overlay success\"></dt-checkmark>`\n          : null}\n        ${this.error\n          ? html`<dt-icon\n                icon=\"mdi:alert-circle\"\n                class=\"icon-overlay alert\"\n                tooltip=\"${this.error}\"\n                size=\"2rem\"\n                ></dt-icon>`\n              : null}\n        </div>\n`;\n  }\n}\n\nwindow.customElements.define('dt-multi-select', DtMultiSelect);\n"],"names":["DtMultiSelect","DtFormBase","styles","super","css","properties","placeholder","type","String","options","Array","filteredOptions","state","value","reflect","open","Boolean","query","activeIndex","Number","containerHeight","onchange","constructor","this","detectTap","updated","_scrollOptionListToActive","container","shadowRoot","querySelector","style","getPropertyValue","clientWidth","setProperty","optionList","activeEl","elTop","offsetTop","elBottom","clientHeight","listTop","scrollTop","scrollTo","top","behavior","_clickOption","e","target","_select","_touchStart","_touchMove","_touchEnd","_keyboardSelectOption","id","event","CustomEvent","detail","field","name","oldValue","length","filter","i","foundPrevious","newVal","map","val","console","log","delete","push","newValue","dispatchEvent","_setFormValue","_remove","dataset","focus","static","currentTarget","getElementsByTagName","_inputFocusIn","_inputFocusOut","relatedTarget","includes","nodeName","_inputKeyDown","keyCode","which","slice","_listHighlightPrevious","_listHighlightNext","preventDefault","_inputKeyUp","Math","min","max","_filterOptions","opt","label","toLocaleLowerCase","willUpdate","props","valueChanged","has","queryChanged","optionsChanged","children","inputGroup","offsetHeight","_renderSelectedOptions","indexOf","html","disabled","_renderOption","idx","_renderOptions","msg","render","optionListStyles","display","labelTemplate","_focusInput","styleMap","loading","saved","error","window","customElements","define"],"mappings":"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"}