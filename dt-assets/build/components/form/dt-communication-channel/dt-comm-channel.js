import{i as e,y as t}from"../../lit-element-2409d5fe.js";import{o as i}from"../../class-map-8d921948.js";import{D as l}from"../dt-text/dt-text.js";import"../../directive-de55b00a.js";import"../dt-form-base.js";import"../../dt-base.js";import"../../lit-localize-763e4978.js";import"../dt-label/dt-label.js";import"../../icons/dt-spinner.js";import"../../icons/dt-checkmark.js";import"../../icons/dt-exclamation-circle.js";window.customElements.define("dt-comm-channel",class extends l{static get styles(){return[...super.styles,e`:host{display:block}.label-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;width:100%;align-items:center}.add-btn{background-color:transparent;border:none}.add-icon{color:var(--dt-comm-channel-add-btn-color,var(--success-color));height:1.75rem;margin:0 1rem}.input-group{width:100%}`]}static get properties(){return{...super.properties,value:{type:Array,reflect:!0}}}_addClick(){console.log("add click"),console.log(this.value),this.value.push({verified:!1,value:"",key:`new-${this.name}`}),this.requestUpdate()}labelTemplate(){return this.label?t`<dt-label ?private="${this.private}" privateLabel="${this.privateLabel}" iconAltText="${this.iconAltText}" icon="${this.icon}">${this.icon?null:t`<slot name="icon-start" slot="icon-start"></slot>`} ${this.label}</dt-label><button class="add-btn" @click="${this._addClick}"><svg class="add-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="currentColor" d="M18 10h-4V6a2 2 0 0 0-4 0l.071 4H6a2 2 0 0 0 0 4l4.071-.071L10 18a2 2 0 0 0 4 0v-4.071L18 14a2 2 0 0 0 0-4z"></path></svg></button>`:""}_inputFieldTemplate(e){return t`<div class="input-group"><input id="${e.key}" name="${this.name}" aria-label="${this.label}" type="${this.type||"text"}" placeholder="${this.placeholder}" ?disabled="${this.disabled}" ?required="${this.required}" class="${i(this.classes)}" .value="${e.value||""}" @change="${this._change}" novalidate @keyup="${this.implicitFormSubmit}"> ${this.touched&&this.invalid?t`<dt-exclamation-circle class="icon-overlay alert"></dt-exclamation-circle>`:null} ${this.error?t`<dt-icon icon="mdi:alert-circle" class="icon-overlay alert" tooltip="${this.error}" size="2rem"></dt-icon>`:null} ${this.loading?t`<dt-spinner class="icon-overlay"></dt-spinner>`:null} ${this.saved?t`<dt-checkmark class="icon-overlay success"></dt-checkmark>`:null}</div>`}_setFormValue(e){super._setFormValue(e),this.internals.setFormValue(JSON.stringify(e))}_change(e){const t=e.target.id,{value:i}=e.target;this.value;let l=[...this.value];const s=this.value.find(((e,i)=>{if(console.log(e,i),e.key===t)return!0}));console.log(s),t===`new-${this.name}`?l=[{value:i}]:this.value.find(((e,s)=>e.key===t&&(l=[{verified:!1,value:i,key:t}],!0))),console.log(l);const a=new CustomEvent("change",{detail:{field:this.name,oldValue:s,newValue:l}}),r=this.value.findIndex((e=>{if(e.key===t)return!0}));console.log(r),this.value[r]=l[0],console.log(this.value),this._setFormValue(this.value),this.dispatchEvent(a)}_renderInputFields(){return this.value?t`${this.value.map((e=>this._inputFieldTemplate(e)))}`:this._inputFieldTemplate({})}render(){return t`<div class="label-wrapper">${this.labelTemplate()}</div>${this._renderInputFields()}`}});
//# sourceMappingURL=dt-comm-channel.js.map
