{"version":3,"file":"dt-tags.js","sources":["../../../src/components/form/dt-tags/dt-tags.js"],"sourcesContent":["import { css, html } from 'lit';\nimport { msg } from '@lit/localize';\nimport { DtMultiSelect } from '../dt-multi-select/dt-multi-select.js';\n\nexport class DtTags extends DtMultiSelect {\n  static get properties() {\n    return {\n      ...super.properties,\n      allowAdd: { type: Boolean },\n      onload: { type: String },\n    };\n  }\n\n  static get styles() {\n    return [\n      ...super.styles,\n      css`\n        .selected-option a,\n        .selected-option a:active,\n        .selected-option a:visited {\n          text-decoration: none;\n          color: var(--primary-color, #3f729b);\n        }\n      `,\n    ];\n  }\n\n  willUpdate(props) {\n    super.willUpdate(props);\n\n    if (props) {\n      const openChanged = props.has('open');\n      // When list is first opened and we don't have any options yet,\n      // trigger _filterOptions to load options\n      if (openChanged && this.open && (!this.filteredOptions || !this.filteredOptions.length)) {\n        this._filterOptions();\n      }\n    }\n  }\n\n  _clickAddNew(e) {\n    if (e.target) {\n      this._select(e.target.dataset?.label);\n      // clear search field if clicked with mouse, since field will lose focus\n      const input = this.shadowRoot.querySelector('input');\n      if (input) {\n        input.value = '';\n      }\n    }\n  }\n\n  _keyboardSelectOption() {\n    if (this.activeIndex > -1) {\n      if (this.activeIndex + 1 > this.filteredOptions.length) {\n        this._select(this.query);\n      } else {\n        this._select(this.filteredOptions[this.activeIndex].id);\n      }\n    }\n  }\n\n  _listHighlightNext() {\n    this.activeIndex = Math.min(\n      this.filteredOptions.length, // allow 1 more than the list length\n      this.activeIndex + 1\n    );\n  }\n\n  /**\n   * Filter to options that:\n   *   1: are not selected\n   *   2: match the search query\n   * @private\n   */\n  _filterOptions() {\n    const selectedValues = (this.value || [])\n      .filter(i => !i.startsWith('-'));\n\n    if (this.options?.length) {\n      this.filteredOptions = (this.options || []).filter(\n        opt =>\n          !selectedValues.includes(opt.id) &&\n          (!this.query ||\n            opt.id\n              .toLocaleLowerCase()\n              .includes(this.query.toLocaleLowerCase()))\n      );\n    } else if (this.open) {\n      // Only run this filtering if the list is open.\n      // This prevents it from running on initial load before a `load` event is attached.\n      this.loading = true;\n      this.filteredOptions = [];\n\n      // need to fetch data via API request\n      const self = this;\n      const event = new CustomEvent('load', {\n        bubbles: true,\n        detail: {\n          field: this.name,\n          postType: this.postType,\n          query: this.query,\n          onSuccess: result => {\n            self.loading = false;\n\n            // if given an array of strings, transform to object array\n            let options = result;\n            if (options.length && typeof options[0] === 'string') {\n              options = options.map(o => ({\n                id: o,\n              }));\n            }\n\n            self.allOptions = options;\n            // filter out selected values from list\n            self.filteredOptions = options.filter(\n              opt => !selectedValues.includes(opt.id)\n            );\n          },\n          onError: error => {\n            console.warn(error);\n            self.loading = false;\n          },\n        },\n      });\n      this.dispatchEvent(event);\n    }\n    return this.filteredOptions;\n  }\n\n  _renderOption(opt, idx) {\n    return html`\n      <li tabindex=\"-1\">\n        <button\n          value=\"${opt.id}\"\n          type=\"button\"\n          data-label=\"${opt.label}\"\n          @click=\"${this._clickOption}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          tabindex=\"-1\"\n          class=\"${this.activeIndex > -1 && this.activeIndex === idx\n      ? 'active'\n      : ''}\"\n        >\n          ${opt.label || opt.id}\n        </button>\n      </li>\n    `;\n  }\n\n  _renderOptions() {\n    let optionsMarkup = super._renderOptions();\n\n    if (this.allowAdd && this.query) {\n      if (!Array.isArray(optionsMarkup)) {\n        optionsMarkup = [optionsMarkup];\n      }\n      optionsMarkup.push(html`<li>\n        <button\n          data-label=\"${this.query}\"\n          @click=\"${this._clickAddNew}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          class=\"${this.activeIndex > -1 &&\n          this.activeIndex >= this.filteredOptions.length\n            ? 'active'\n            : ''}\"\n        >\n          ${msg('Add')} \"${this.query}\"\n        </button>\n      </li>`);\n    }\n    return optionsMarkup;\n  }\n\n  _renderSelectedOptions() {\n    const options = this.options || this.allOptions;\n    return (this.value || [])\n      .filter(i => !i.startsWith('-'))\n      .map(\n        tag => {\n          let label = tag;\n          if (options) {\n            const option = options.filter(o => o === tag || o.id === tag);\n            if (option.length) {\n              label = option[0].label || option[0].id || tag;\n            }\n          }\n          let link;\n          if (!link && window?.SHAREDFUNCTIONS?.createCustomFilter) {\n            const query =  window.SHAREDFUNCTIONS.createCustomFilter(this.name, [tag])\n            const fieldLabel = this.label || this.name\n            const labels = [{ id: `${this.name}_${tag}`, name: `${fieldLabel}: ${tag}`}]\n            link = window.SHAREDFUNCTIONS.create_url_for_list_query(this.postType, query, labels);\n          }\n          return html`\n          <div class=\"selected-option\">\n            <a\n              href=\"${link || '#'}\"\n              ?disabled=\"${this.disabled}\"\n              alt=\"${tag}\"\n              >${label}</a\n            >\n            <button\n              @click=\"${this._remove}\"\n              ?disabled=\"${this.disabled}\"\n              data-value=\"${tag}\"\n            >\n              x\n            </button>\n          </div>\n        `}\n      );\n  }\n}\n\nwindow.customElements.define('dt-tags', DtTags);\n"],"names":["DtTags","DtMultiSelect","properties","super","allowAdd","type","Boolean","onload","String","styles","css","willUpdate","props","has","this","open","filteredOptions","length","_filterOptions","_clickAddNew","e","target","_select","dataset","label","input","shadowRoot","querySelector","value","_keyboardSelectOption","activeIndex","query","id","_listHighlightNext","Math","min","selectedValues","filter","i","startsWith","options","opt","includes","toLocaleLowerCase","loading","self","event","CustomEvent","bubbles","detail","field","name","postType","onSuccess","result","map","o","allOptions","onError","error","console","warn","dispatchEvent","_renderOption","idx","html","_clickOption","_touchStart","_touchMove","_touchEnd","_renderOptions","optionsMarkup","Array","isArray","push","msg","_renderSelectedOptions","tag","link","option","window","SHAREDFUNCTIONS","createCustomFilter","fieldLabel","labels","create_url_for_list_query","disabled","_remove","customElements","define"],"mappings":"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"}